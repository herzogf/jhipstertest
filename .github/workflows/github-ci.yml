name: Application CI
on: [push, pull_request]
jobs:
    pipeline:
        name: jhipstertest pipeline
        runs-on: ubuntu-latest
        if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]') && !contains(github.event.pull_request.title, '[skip ci]') && !contains(github.event.pull_request.title, '[ci skip]')"
        timeout-minutes: 40
        env:
            NODE_VERSION: 12.16.1
            SPRING_OUTPUT_ANSI_ENABLED: DETECT
            SPRING_JPA_SHOW_SQL: false
            JHI_DISABLE_WEBPACK_LOGS: true
            NG_CLI_ANALYTICS: false
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-node@v1
              with:
                  node-version: 12.16.1
            - uses: actions/setup-java@v1
              with:
                  java-version: '11.x'
            - name: Stop MySQL server
              run: sudo /etc/init.d/mysql stop
            
            - name: Cache node.js packages
              uses: actions/cache@v2
              with:
                path: node_modules
                key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                restore-keys: |
                   ${{ runner.os }}-node-
            
            - name: Cache local Maven repository
              uses: actions/cache@v2
              with:
                path: ~/.m2/repository
                key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
                restore-keys: |
                     ${{ runner.os }}-maven-
            
            - name: Install node.js packages
              run: npm install
            
            - name: Run backend test
              run: |
                  chmod +x mvnw
                  ./mvnw -ntp verify -P-webpack
            
            - name: Run frontend test
              run: npm run test
            
            - name: Package application
              run: ./mvnw -ntp package -Pprod -DskipTests
            
            - name: Build and publish docker image
              if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')) && ${{ success() }}
              run: |
                  GIT_TAG=:${GITHUB_REF#refs/tags/}
                  DOCKER_TAG=${GIT_TAG#:refs/heads/master}
                  ./mvnw -ntp jib:build -Djib.to.image=herzogf/jhipstertest${DOCKER_TAG} -Djib.to.auth.username="${{ secrets.DOCKER_USERNAME }}" -Djib.to.auth.password="${{ secrets.DOCKER_PASSWORD }}"

            - name: Set buildnumber in k8s deployment yaml
              if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')) && ${{ success() }}
              run: "sed -i \"s/BUILD_NUMBER:.*/BUILD_NUMBER: '${GITHUB_RUN_NUMBER}'/g\" jhipstertest-k8s/jhipstertest-deployment.yml"

            - name: Add, commit and push modified k8s yaml without triggering new ci run
              if: github.event_name == 'push' && (github.ref == 'refs/heads/master' || startsWith(github.ref, 'refs/tags/')) && ${{ success() }}
              run: |
                  git config --local user.email "action@github.com"
                  git config --local user.name "GitHub Action"
                  git add jhipstertest-k8s/jhipstertest-deployment.yml
                  git commit -m "[ci skip] add build number ${GITHUB_RUN_NUMBER} to k8s yaml"

            - name: Push changes
              uses: ad-m/github-push-action@master
              with:
                github_token: ${{ secrets.GITHUB_TOKEN }}

            - name: Invoke deployment hook
              uses: herzogf/workflow-webhook@v1.0.2-insecure
              env:
                webhook_url: ${{ secrets.WEBHOOK_URL }}
                webhook_secret: ${{ secrets.WEBHOOK_SECRET }}
